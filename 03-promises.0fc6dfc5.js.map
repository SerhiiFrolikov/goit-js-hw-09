{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAOA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAbMQ,SAASC,cAAc,SAE/BC,iBAAiB,SAetB,SAAyBC,GACvBA,EAAIC,iBAMJ,IALA,IAAgCC,EAAAF,EAAIG,cAAcC,SAA1CC,EAAwBH,EAAxBb,MAAOiB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACjBC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAEvBG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EACrC1B,EAAc0B,EAAGL,GACdM,MAAK,SAAAC,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MACjBJ,EAAA+B,OAAOC,QACL,uBAAwCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAGjD8B,OAAM,SAAAJ,G,IAAG3B,EAAQ2B,EAAR3B,SAAUC,EAAK0B,EAAL1B,MAClBJ,EAAA+B,OAAOI,QACL,sBAAqCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAGhDmB,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nconst form = document.querySelector(\".form\");\n\nform.addEventListener(\"click\", onCreatePromise);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onCreatePromise(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget.elements;\n  let fieldDelay = Number(delay.value);\n  let fieldStep = Number(step.value);\n  let fieldAmount = Number(amount.value);\n\n  for (let i = 1; i <= fieldAmount; i += 1) {\n    createPromise(i, fieldDelay)\n      .then(({ position, delay }) => {\n        Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`,\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`,\n        );\n      });\n     fieldDelay += fieldStep;\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","evt","preventDefault","_elements","currentTarget","elements","delay1","step","amount","fieldDelay","Number","value","fieldStep","fieldAmount","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.0fc6dfc5.js.map"}